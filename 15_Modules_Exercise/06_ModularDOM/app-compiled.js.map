{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAC,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AACA,IAAI,WAAW,QAAQ,aAAR,CAAf;AACA,IAAI,UAAU,QAAQ,WAAR,CAAd;AACA,IAAI,SAAS,QAAQ,UAAR,CAAb;AACA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AACA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;;AAEA,OAAO,WAAP,GAAqB,WAArB;AACA,OAAO,QAAP,GAAkB,QAAlB;AACA,OAAO,OAAP,GAAiB,OAAjB;AACA,OAAO,MAAP,GAAgB,MAAhB;AACA,OAAO,YAAP,GAAsB,YAAtB;AACA,OAAO,YAAP,GAAsB,YAAtB;;AAGD","file":"app-compiled.js","sourcesContent":[" let BaseElement = require('./base-element');\r\n let TitleBar = require('./title-bar');\r\n let Article = require('./article');\r\n let Footer = require('./footer');\r\n let ImageArticle = require('./image-article');\r\n let TableArticle = require('./table-article');\r\n\r\n result.BaseElement = BaseElement;\r\n result.TitleBar = TitleBar;\r\n result.Article = Article;\r\n result.Footer = Footer;\r\n result.ImageArticle = ImageArticle;\r\n result.TableArticle = TableArticle;\r\n\r\n\r\n/*\r\n\r\nclass BaseElement{\r\n    constructor(){\r\n        if(this.constructor.name == 'BaseElement'){\r\n            throw new Error('BaseElement cannot be instantiated!');\r\n        }\r\n        this._element = null;\r\n    }\r\n    appendTo(selector){\r\n        this.createElement();\r\n        $(selector).append(this._element);\r\n    }\r\n    createElement(){\r\n        this._element = this.getElementString();\r\n    }\r\n\r\n    getElementString(){\r\n        return $(this._element).prop('outerHTML');\r\n    }\r\n}\r\n\r\n\r\nclass TitleBar extends BaseElement{\r\n    constructor(title){\r\n        super();\r\n        this._title = title;\r\n        this._links = [];\r\n    }\r\n\r\n    addLink(href, name){\r\n        let link = `<a class=\"menu-link\" href=\"${href}\">${name}</a>`;\r\n        this._links.push(link);\r\n    }\r\n\r\n    getElementString(){\r\n        let html = `<div><span class=\"title\">${this._title}</span></div>\\n`;\r\n        html += '<div>\\n';\r\n        html += '<nav class=\"menu\">\\n';\r\n        let linksBlock = this._links.join('|');\r\n        html += linksBlock;\r\n        html += '</nav>\\n</div>\\n';\r\n        this._element = html;\r\n        return this._element;\r\n    }\r\n}\r\n\r\n\r\nclass Footer extends BaseElement{\r\n    constructor(message){\r\n        super();\r\n        this._message = message;\r\n    }\r\n\r\n    getElementString(){\r\n        this._element = `<footer>Copyright &copy; ${this._message}</footer>`;\r\n        return this._element;\r\n    }\r\n}\r\n\r\nclass Article extends BaseElement{\r\n    constructor(title, content){\r\n        super();\r\n        this._title = title;\r\n        this._content = content;\r\n        this._timestamp = new Date().getTime();\r\n    }\r\n\r\n    getElementString(){\r\n        let html = '<div class=\"article\">';\r\n        html += `<div class=\"article-title\">${this._title}</div>`;\r\n        html += `<p>${this._content}</p>`;\r\n        html += '</div>';\r\n        this._element = html;\r\n        return this._element;\r\n    }\r\n}\r\n\r\nclass ImageArticle extends Article{\r\n    constructor(title, content, image){\r\n        super(title, content);\r\n        this._image = image;\r\n    }\r\n\r\n    getElementString(){\r\n        let html = '<div class=\"article\">';\r\n        html += `<div class=\"article-title\">${this._title}</div>`;\r\n        html += `<div class=\"image\"><img src=\"${this._image}\"></div>`;\r\n        html += `<p>${this._content}</p>`;\r\n        html += '</div>';\r\n        this._element = html;\r\n        return this._element;\r\n    }\r\n}\r\n\r\nclass TableArticle extends Article{\r\n    constructor(title, content){\r\n        super(title, content);\r\n        this._headings = null;\r\n        this._data = null;\r\n    }\r\n\r\n    loadData(headings, data){\r\n        this._headings = headings;\r\n        this._data = data;\r\n    }\r\n\r\n    getElementString(){\r\n        let html = '<div class=\"article\">';\r\n        html += `<div class=\"article-title\">${this._title}</div>`;\r\n        html += `<p>${this._content}</p>`;\r\n        html += '<div class=\"table\">';\r\n        html += '<table class=\"data\">';\r\n\r\n        let tableHeadings = '<tr>';\r\n        for(let heading of this._headings){\r\n            let headingHTML = `<th>${heading}</th>`;\r\n            tableHeadings += headingHTML;\r\n        }\r\n        tableHeadings += '</tr>';\r\n        html += tableHeadings;\r\n\r\n        let tableData ='';\r\n        for(let i = 0; i < this._data.length; i++){\r\n            tableData += '<tr>';\r\n            let obj = this._data[i];\r\n            for(let j = 0; j < Object.keys(obj).length; j++){\r\n                tableData += `<td>${obj[this._headings[j].toLowerCase().replace(' ', '')]}</td>`;\r\n            }\r\n            tableData += '</tr>';\r\n        }\r\n        html += tableData;\r\n        html += '</table>';\r\n        html += '</div>';\r\n        html += '</div>';\r\n        this._element = html;\r\n        return this._element;\r\n    }\r\n}\r\n\r\n*/\r\n"]}